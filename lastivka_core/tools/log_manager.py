import os
import shutil
from pathlib import Path
from datetime import datetime

# üìÇ –®–ª—è—Ö–∏
BASE_DIR = Path(__file__).resolve().parent.parent
LOGS_DIR = BASE_DIR / "logs"
ARCHIVE_DIR = LOGS_DIR / "archive"
ARCHIVE_DIR.mkdir(exist_ok=True)

# üìÅ –ö–ª—é—á–æ–≤—ñ —Ñ–∞–π–ª–∏, —è–∫—ñ –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –∞–∫—Ç–∏–≤–Ω–∏–º–∏
ACTIVE_LOGS = {"pronunciation_errors.json"}

# üìÖ –ü–æ—Ä–æ–≥ –¥–∞—Ç–∏ –∞–±–æ —ñ–Ω—à—ñ —É–º–æ–≤–∏ –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ç—É—Ç


def archive_logs():
    """–ü–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ –≤—Å—ñ –ª–æ–≥–∏, –∫—Ä—ñ–º –∞–∫—Ç–∏–≤–Ω–∏—Ö, –¥–æ archive."""
    moved = []
    for file in LOGS_DIR.iterdir():
        if file.is_file() and file.name not in ACTIVE_LOGS:
            shutil.move(str(file), ARCHIVE_DIR / file.name)
            moved.append(file.name)
    return moved


def list_archived():
    return [f.name for f in ARCHIVE_DIR.glob("*.json")]


def list_active():
    return [f.name for f in LOGS_DIR.glob("*.json") if f.name in ACTIVE_LOGS]


if __name__ == "__main__":
    print("\nüì¶ –ê—Ä—Ö—ñ–≤–∞—Ü—ñ—è –ª–æ–≥—ñ–≤...")
    moved_logs = archive_logs()
    if moved_logs:
        print("‚úÖ –ü–µ—Ä–µ–º—ñ—â–µ–Ω–æ –¥–æ archive:", ", ".join(moved_logs))
    else:
        print("üìÇ –ù–µ–º–∞—î –ª–æ–≥—ñ–≤ –¥–ª—è –∞—Ä—Ö—ñ–≤–∞—Ü—ñ—ó.")

    print("\nüìÅ –ê–∫—Ç–∏–≤–Ω—ñ –ª–æ–≥–∏:", list_active())
    print("üóÉÔ∏è  –ê—Ä—Ö—ñ–≤–æ–≤–∞–Ω—ñ –ª–æ–≥–∏:", list_archived())
