import json
from pathlib import Path

EMOTION_CONFIG_PATH = Path(__file__).resolve().parent.parent / "config" / "emotion_config.json"

current_emotion = {
    "emotion": "—Å–ø–æ–∫—ñ–π",
    "reaction": "",
    "speed": 170,
    "tone": "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π",
    "intensity": "medium"
}

def _load_emotions():
    with open(EMOTION_CONFIG_PATH, "r", encoding="utf-8") as f:
        cfg = json.load(f)
    # –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –¥–≤–æ—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä: {"emotions": {...}} –∞–±–æ –≤—Å–µ –≤ –∫–æ—Ä–µ–Ω—ñ
    emotions_dict = cfg.get("emotions", cfg)
    # —à–≤–∏–¥–∫–æ—Å—Ç—ñ –æ–∫—Ä–µ–º–æ
    speeds = cfg.get("speed", {})
    default_speed = speeds.get("default", 170)
    return emotions_dict, speeds, default_speed

def set_emotion(emotion_name: str):
    global current_emotion
    try:
        emotions, speeds, default_speed = _load_emotions()
        props = emotions.get(emotion_name)
        if not props:
            print(f"‚ùå –ï–º–æ—Ü—ñ—è '{emotion_name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –î–æ—Å—Ç—É–ø–Ω—ñ: {', '.join(k for k in emotions.keys() if isinstance(emotions[k], dict))}")
            return
        current_emotion = {
            "emotion": emotion_name,
            "reaction": props.get("reaction", ""),
            "speed": speeds.get(emotion_name, default_speed),
            "tone": props.get("tone", "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π"),
            "intensity": props.get("intensity", "medium")
        }
        print(f"üí´ –ï–º–æ—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–∞: {emotion_name} ({current_emotion['tone']})")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –µ–º–æ—Ü—ñ—ó: {e}")

def get_emotion():
    return current_emotion
